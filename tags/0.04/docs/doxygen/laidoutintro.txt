/*! \mainpage

\section     Laidout  
-- Version 0.04 --\n
Currently in the "A bit of a hack, but mostly works on my machine" stage of development.

If you want to hack away at Laidout, you've come to the right place. Please be
advised that any part of Laidout code may completely change without notice.

This is my sprawling desktop publishing software that I've been making on and off for the last
3 or 4 years, which is about 2 or 3 years longer than I have really wanted to be doing.
Most of that wasted excess time has been spent developing the 
<a href="http://laxkit.sourceforge.net">Laxkit</a>, my brand new 
X window toolkit. Only late last November (2005), 3.5 years in, was I able to get something
onto the screen!

Something found in this program, and not in any other desktop publishing software in the world
that I am aware of, open source or not, is the ability to create and manipulate lines
that are composed of different kinds of segments, but still be continuous. Often you can have
circles OR bezier lines OR polygon lines OR nurbs lines, but here you can have ALL of them all
at the same time and preserve the idiosyncracies of each type of segment! (well, nurbs will
have to wait until I figure out what a nurb is anyway) The SVG specification
and Postscript allows for such lines (except no nurbs), but I do not know of programs 
(except Laidout) that allow easy construction and editing of those lines.
Eh yo Inkscape! Where are ya? (of course, this assumes I'm not missing bits of the manual)

Also, Laidout's interface is very configurable. The emphasis is on manipulating the graphics
on the screen rapidly and all the little helper windows can be big and clunky or slight and
minimal. (*****in truth, its not quite to that point yet)

Boasting aside, why, really, should any one use Laidout rather than Inkscape, Scribus, or even InDesign?
Well, you shouldn't!! Right now, Laidout is still very experimental, and no printing house anywhere
supports its files, or has even heard of it. If you need something with a proven history, then go for
Scribus. It apparently produces very clean files that printing houses will probably not hate you for.
The major deficiency of Scribus (as of May 2006) is the lack of impositioning features, however, that 
is being worked on

Laidout currently almost suits most of my purposes fairly well,
which is mainly home made books of cartoons ultimately copied at the copy store, folded over and stapled, or
perfect bound for the fancy editions.

When I started to program Laidout, I was a somewhat inexperienced programmer, so I figured
I would learn the most writing both the program and the windowing toolkit from scratch (or at least from Xlib). 
Which is true, however as
an artist, in retrospect I really need the desktop publishing program far more than the brand new window
toolkit, and thus in hindsight, fltk2.0 or gtkmm are (or should have been) looking pretty good! 


\section saga The Saga of Desktop Publishing under Linux

The Story So Far...

One thing I love to do is make various little books of my artwork, and sometimes t-shirts or 
other silkscreening. It is relatively inexpensive to make small runs of books that can 
often pass for high quality 
printing with careful photocopying, and perfect binding. I looked and looked for some program 
that filled my needs, and didn't cost thousands of dollars like Quark, Photoshop, or InDesign 
running on a Mac. That left me with Linux on a cheap computer. While searching for some 
bookmaking software, I encountered several possibilities such as Scribus, Passepartout, Inkscape,
Lyx, Latex/TeX, and Openoffice, which were all unsuitable for
one reason or another. 

See <a href="http://www.tomlechner.com/computer/laidout/linuxdtprant.html">here</a>
for my inflammatory and unfair reviews of other programs I considered before
embarking on my Laidout programming odyssey.


I wanted a program with these characteristics (they are not all yet implemented!!):

<ul>

<li> Layout capabilities for little pamphlets as well as books of several hundred graphics heavy pages, books 
  with signatures, foldings, etc. For instance, from an 11x17 paper, you can cut and fold 
  to produce 3 little squarish books (see Bike Propaganda). None of the above (free) programs are
  designed for such pagesetting features. In the era of photocopiers and zines, that is unfortunate.
<li> WYSIWYG font and image layout, taking into account paper color, and basic ink interaction, particularly
  useful for such projects as screen printing on colored t-shirts
<li> Scripting 
<li> Minimal windows and icons yet robust interfaces. Making full use of 3 button mice with a 
  wheel, and keyboard shortcuts sure cuts 
  down on screen clutter, while still being versatile and efficient. For reference, I am a 
  fan of vi, Blender, and the Blackbox window manager (flame on!). 
<li> robust text wrapping, text on a line, kerning, minor leading adjustments...
<li> robust transformation and arrangement tools
<li> Plugin architecture to make it potentially adaptable to do basic cad things, like 
  room layouts, or perhaps even tv/movie animation schemes where 1 page is 1 frame, make nets 
  for fold up polyhedron, for
  instance a calendar printed on the 12-sided dodecahedron, etc.
</ul>



Some things not so very vital to me, but which would be a neat feature would be:
- dot screening with different ink systems, like printing with various combinations of, say, 
  black-blue-orange, rather than the old standby of CMYK
- automatic trapping based on what inks used in what order...



\section yeahbut Yeah, but you really think yours is such hot stuff?

Finally I have something more or less working to help me lay out my books.
Please let me know what you like about it and what you think sucks about it, especially
if you have patches. If other people get as obsessed with this program as I've been
the last few years, then perhaps I can get back to making artwork!



\section donate Donate!

While this program is released under the GPL, free for you to use and modify any way you want (as 
long as you credit things appropriately), it takes resources to devote to development. For instance,
to pay my bills, the lead developer is employed as a janitor. Therefore, 
if you think this program is worth the drive space, please, please send donations of money, fresh 
fruit (fresh upon the recipient receiving it intact in person), hardware, ski resort reservations,
etc to the developers (just 1 right now!) found on http://www.laidout.org .


\section wishing Feature Wishlist

Not a roadmap so much as things that any reasonable desktop publishing software should have.
You will note that hardly any of this is currently implemented in Laidout:

<pre>
Tabstops and guides that lie on arbitrary paths, not just vertical and horizontal
    lines. Gone are the days of rigidly defined and poorly accessed tabstops!
Text on a line
Bezier Patch transforms, (done)
and bez color patch gradients (done)
Linear, radial, and circle color gradients (done)
Arbitrary f(s,t) transforms, and f(s) or f(t) transforms for paths
Aligning points, text, and/or objects to paths
Repeater tool along path
Convert Text to bezier path
Ellipses, arcs, chords
Math calculations in input boxes
Python scripting
Number scripting (a scripting language I use from time to time for my polyedra stuff)
Lines/polygons with various methods of shifting edges
Freehand, including XInput support
Beginning/end/middle arrows and such
Edge feathering (as seen in Xara) and metafont-y erase brush
Fill applied to stroke
Use Stroke/fill as mask
Compound paths
Story Editor
HTML,pdf,postscript,svg
Drag n drop
%Color separations
RGB/CMYK/CIELab/Grayscale/BW/DeviceN????: %Color specifications with arbitrary primaries
icc color profiles via littlecms
Collect for out
Spiffy Hyphenation and justification
Plugin Modules
Autotrace images
%Spread editor (partial)
Editable clip and textwrap mask
arbitrary imposition (almost)
overprinting/trapping on per object basis
UCR, BG
Tables
Rotate whole page view on screen by arbitrary degrees, not just portrait/landscape (done)
Import/export: TeX, scribus, passepartout, inkscape, (quark, indesign, ...?)

other kind of neat ideas from other programs, namely Scribus 1.3 roadmap and map suggestions:
Auto sync keyboard shortcuts with inkscape/gimp/whatever!
Record macros, like pagestream or vim!
support for TeX, LaTeX, MathML
Openclipart integration/scrapbook
cntl-+/- zooms around object, neat!
%Color selector previews different shades of color with black and white text on it!!! Fab!
The scribus color wheel is very clever.
Insert sample gibberish text!! Yeah!
Preflight verifier!
be able to swap any two items, or do same as spreadeditor be able to swap and roll and eject
</pre>
*/




/*! \page todo TODO
 *
 * \section longterm Long Term Todo
 
 Ultimately, Laidout should be able to export and import files from such others programs as Scribus,
 Inkscape, Passepartout(output sort of works, input not imp.), and TeX. Most likely no one program will
 do all things for everyone, so such interoperability is important.

 
 * \section needtodo Stuff that needs doing:
 */


 
 
 
