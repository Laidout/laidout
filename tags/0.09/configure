#!/bin/bash

# --help
# --prefix=/blah/blah


LAIDOUTVERSION=0.09
PREFIX="/usr/local"
LAXDIR="/usr/local/include/lax"
GS="/usr/bin/gs"


 ##
 ## Parse options
 ##
while true ; do
  ARG=$1;
  if [ x$ARG == x ] ; then break; fi
  
  option=`expr "x$ARG" : 'x\([^=]*\)=.*'`;
  if [ x$option == x ] ; then
    option="$ARG"; 
  fi
  
  optarg=`expr "x$ARG" : 'x[^=]*=\(.*\)'`;
  #echo "option=$option,   optarg=$optarg"

  case "$option" in
    -h | --help) 
        echo "Whizbang Laidout configuration script options:" ;
		echo ""
        echo " --help                       Show this stuff"
        echo " --prefix=/where/to/install   Default /usr/local"
        echo " --gs=/path/to/gs             Where is your ghostscript executable? This is quite"
        echo "                                optional, and is currently used only to generate"
        echo "                                previews of EPS files."
        echo " --laxkit=/laxkit/headers     Default in releases is ./laxkit, since the Laxkit"
        echo "                                is currently included in release downloads"
		echo " --version=OtherVersionNum    You may force Laidout to compile with a different"
		echo "                                version string. This will make ~/.laidout/(version)"
		echo "                                and the executable becomes laidout-(version) and will"
		echo "                                save system stuff in prefix/share/laidout-(version)."
		echo " --language=path/to/langs     The path where translation files should be installed."
		echo "                                This will normally be 'share/locale', and the files"
		echo "                                themselves then get put in prefix/share/locale/*."
        echo ""
		exit 1 ;;
    -p | --prefix)  
        if [ -z $optarg ] ; then 
          optarg=$2
          shift
        fi
		PREFIX="$optarg"
        #echo prefix $optarg ;
        shift ;;
    --version | -v)  
        if [ -z $optarg ] ; then 
          optarg=$2
          shift
        fi
		LAIDOUTVERSION="$optarg"
        #echo version $optarg ;
        shift ;;
    --gs) 
        if [ -z $optarg ] ; then 
          optarg=$2
          shift
        fi
		GS="$optarg"
		echo gs $optarg; 
		shift ;;
    --laxkit)
        if [ -z $optarg ] ; then 
          optarg=$2
          shift
        fi
		LAXDIR="$optarg"
		echo laxkit $optarg; 
		shift ;;
    --language)
        if [ -z $optarg ] ; then 
          optarg=$2
          shift
        fi
		LANGUAGE_PATH="$optarg"
		echo language path $optarg; 
		shift ;;
    *) echo "Unrecognized option $option $optarg" ; break ;;
  esac
done



# do check for required libraries:
#  NEEDED      libX11.so.6
#  NEEDED      libImlib2.so.1
#  NEEDED      libfreetype.so.6
#  NEEDED      libssl.so.0.9.8
							  

 ## The stuff in NEED can be checked with pkg-config. Not all libraries
 ## can be checked this way! (notably cups, apparently)
#NEED='x11 cupsys freetype2 imlib2 xext ssl'
NEED='x11  freetype2 imlib2 libssl'
NUM='1'

for NAME in $NEED; do
    echo -n Checking for $NAME......;
    if [ "`pkg-config --exists --print-errors --errors-to-stdout $NAME`"xxx != "xxx" ] ; then 
        echo "You need to install the development package of $NAME."; 
        NUM="";
    else 
        echo "ok"; 
    fi
done
#echo NUM=$NUM


 ## cups doesn't seem to have a pkg-config entry, so do this hackier check
echo -n Checking for cups......;
if [ ! -e /usr/lib/libcups.so -a ! -e /usr/local/lib/libcups.so ] ; then 
    echo "You need to install the development package of Cups."; 
    NUM="";
else echo "ok"; 
fi

echo



if [ "$NUM" != "1" ]; then
    echo "Too many problems to proceed!"
	exit 1
fi

if [ x$LANGUAGE_PATH == x ]; then
	LANGUAGE_PATH=share/locale
fi


 ##
 ## generate src/version.h
 ## 
echo "Generating src/version.h..."

echo " // ---- THIS FILE IS AUTOMATICALLY GENERATED -----" > src/version.h
echo " // ----          BY ../configure             -----" >> src/version.h
echo "#ifndef VERSION_H" >> src/version.h
echo "#define VERSION_H" >> src/version.h
echo "" >> src/version.h
echo "#define LAIDOUT_VERSION  \"$LAIDOUTVERSION\"" >> src/version.h
echo "" >> src/version.h
echo "#endif" >> src/version.h
echo "" >> src/version.h



 ##
 ## generate src/configured.h by putting install_prefix where the code can access it!
 ##
echo "Generating src/configured.h..."

echo " // ---- THIS FILE IS AUTOMATICALLY GENERATED -----" > src/configured.h
echo " // ----          BY ../configure             -----" >> src/configured.h
echo "#ifndef CONFIGURED_H" >> src/configured.h
echo "#define CONFIGURED_H" >> src/configured.h
echo "" >> src/configured.h
echo "#define INSTALL_PREFIX   \"$PREFIX\"" >> src/configured.h
echo "#define BIN_DIRECTORY    \"$PREFIX/bin\"" >> src/configured.h
echo "#define BIN_PATH         \"$PREFIX/bin/laidout\"" >> src/configured.h
echo "#define SHARED_DIRECTORY \"$PREFIX/share/laidout/$LAIDOUTVERSION/\"" >> src/configured.h
echo "#define ICON_DIRECTORY   \"$PREFIX/share/laidout/$LAIDOUTVERSION/icons\"" >> src/configured.h
echo "#define LANGUAGE_PATH    \"$PREFIX/$LANGUAGE_PATH\"" >> src/configured.h
echo "#define GHOSTSCRIPT_BIN  \"$GS\"" >> src/configured.h 
echo "" >> src/configured.h
echo "#endif" >> src/configured.h
echo "" >> src/configured.h



 ##
 ## generate Makefile-toinclude
 ##
echo "Generating ./Makefile-toinclude..."

echo " # ---- THIS FILE IS AUTOMATICALLY GENERATED -----" > Makefile-toinclude
echo " # ----          BY ../configure             -----" >> Makefile-toinclude
echo "" >> Makefile-toinclude
echo "PREFIX=$PREFIX"                 >> Makefile-toinclude
echo "LAIDOUTVERSION=$LAIDOUTVERSION" >> Makefile-toinclude
echo "LAXDIR=$LAXDIR"                 >> Makefile-toinclude
echo "LAXIDIR=$LAXDIR/interfaces"     >> Makefile-toinclude
echo "LANGUAGE_PATH=$PREFIX/$LANGUAGE_PATH"   >> Makefile-toinclude
echo "" >> Makefile-toinclude


 ##
 ## generate config.log
 ##
echo "       Configuration Summary"                > config.log
echo "      generated by ./configure"             >> config.log
echo "----`date`---"                              >> config.log
echo "-----------------------------------"        >> config.log
echo " Laidout version:  $LAIDOUTVERSION"         >> config.log
echo "    Install here:  $PREFIX"                 >> config.log
echo "   Language Path:  $PREFIX/$LANGUAGE_PATH"  >> config.log
echo "  Laxkit headers:  $LAXDIR"                 >> config.log
echo "     Ghostscript:  $GS"                     >> config.log


echo 
echo "       Configuration Summary"
echo "----------------------------------"
echo " Laidout version:  $LAIDOUTVERSION"
echo "    Install here:  $PREFIX"
echo "   Language Path:  $PREFIX/$LANGUAGE_PATH"
echo "  Laxkit headers:  $LAXDIR"
echo "     Ghostscript:  $GS"
echo
echo "Now type make to build.";
